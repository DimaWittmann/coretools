environment:

  matrix:

    # For Python versions available on Appveyor, see
    # http://www.appveyor.com/docs/installed-software#python
    # The list here is complete (excluding Python 2.6, which
    # isn't covered by this document) at the time of writing.

    - PYTHON: "C:\\Python27"
    - PYTHON: "C:\\Python27-x64"

install:
  # We need wheel installed to build wheels
  - "%PYTHON%\\python.exe -m pip install wheel tox"
  - set PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%

build: off

test_script:
  - "pwd"
  - "ls"
  - ps: "cd iotilecore; tox; cd .."
  - ps: "cd iotilegateway; tox; cd .."
  - ps: "cd transport_plugins\\bled112; tox; cd ..\\.."

after_test:
  # This step builds your wheels.
  # Again, you only need build.cmd if you're building C extensions for
  # 64-bit Python 3.3/3.4. And you need to use %PYTHON% to get the correct
  # interpreter
  - ps: "cd iotilecore; %PYTHON%\\python.exe setup.py sdist bdist_wheel; cd .."
  - ps: "cd iotilebuild; %PYTHON%\\python.exe setup.py sdist bdist_wheel; cd .."
  - ps: "cd iotilegateway; %PYTHON%\\python.exe setup.py sdist bdist_wheel; cd .."
  - ps: "cd transport_plugins\\bled112; %PYTHON%\\python.exe setup.py sdist bdist_wheel; cd ..\\.."

artifacts:
  # bdist_wheel puts your built wheel in the dist directory
  - path: "iotilecore\\dist\\*"
    name: IOTileCore
  - path: "iotilebuild\\dist\\*"
    name: IOTileBuild
  - path: "iotilegateway\\dist\\*"
    name: IOTileGateway
  - path: "transport_plugins\\bled112\\dist\\*"
    name: BLED112Plugin

#on_success:
#  You can use this step to upload your artifacts to a public website.
#  See Appveyor's documentation for more details. Or you can simply
#  access your wheels from the Appveyor "artifacts" tab for your build.